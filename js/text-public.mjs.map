{"version":3,"mappings":"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","names":[],"ignoreList":[],"sources":["../src/helpers/index.js","../src/public.js"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Callback that should be executed after the document is ready\n *\n * @param callback\n */\n\nconst documentReady = function(callback) {\n\tconst fn = () => setTimeout(callback, 0)\n\tif (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {\n\t\tfn()\n\t} else {\n\t\tdocument.addEventListener('DOMContentLoaded', callback)\n\t}\n}\n\nexport {\n\tdocumentReady,\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { loadState } from '@nextcloud/initial-state'\nimport { getSharingToken } from '@nextcloud/sharing/public'\n// eslint-disable-next-line import/no-unresolved, n/no-missing-import\nimport 'vite/modulepreload-polyfill'\n\nimport {\n\tregisterFileActionFallback,\n\tregisterFileCreate,\n} from './helpers/files.js'\nimport { logger } from './helpers/logger.js'\nimport { openMimetypes } from './helpers/mime.js'\nimport { documentReady } from './helpers/index.js'\nimport store from './store/index.js'\nimport { emit, subscribe } from '@nextcloud/event-bus'\nimport RichWorkspace from './views/RichWorkspace.vue'\n\nconst newRichWorkspaceFileMenuPlugin = {\n\tattach(menu) {\n\t\tconst fileList = menu.fileList\n\t\tconst descriptionFile = t('text', 'Readme') + '.' + loadState('text', 'default_file_extension')\n\t\t// only attach to main file list, public view is not supported yet\n\t\tif (fileList.id !== 'files' && fileList.id !== 'files.public') {\n\t\t\treturn\n\t\t}\n\n\t\t// register the new menu entry\n\t\tmenu.addMenuEntry({\n\t\t\tid: 'rich-workspace-init',\n\t\t\tdisplayName: t('text', 'Add folder description'),\n\t\t\ttemplateName: descriptionFile,\n\t\t\ticonClass: 'icon-add-folder-description',\n\t\t\tfileType: 'file',\n\t\t\tuseInput: false,\n\t\t\tactionHandler() {\n\t\t\t\treturn window.FileList\n\t\t\t\t\t.createFile(descriptionFile, { scrollTo: false, animate: false })\n\t\t\t\t\t.then(() => emit('Text::showRichWorkspace', { autofocus: true }))\n\t\t\t},\n\t\t\tshouldShow() {\n\t\t\t\treturn !fileList.findFile(descriptionFile)\n\t\t\t},\n\t\t})\n\t},\n}\n\nconst filesWorkspacePlugin = {\n\tel: null,\n\n\tattach(fileList) {\n\t\tif (fileList.id !== 'files' && fileList.id !== 'files.public') {\n\t\t\treturn\n\t\t}\n\t\tthis.el = document.createElement('div')\n\t\tfileList.registerHeader({\n\t\t\tid: 'workspace',\n\t\t\tel: this.el,\n\t\t\trender: this.render.bind(this),\n\t\t\tpriority: 10,\n\t\t})\n\t},\n\n\trender(fileList) {\n\t\tif (fileList.id !== 'files' && fileList.id !== 'files.public') {\n\t\t\treturn\n\t\t}\n\n\t\tOC.Plugins.register('OCA.Files.NewFileMenu', newRichWorkspaceFileMenuPlugin)\n\t\timport('vue').then((module) => {\n\t\t\tconst Vue = module.default\n\t\t\tthis.el.id = 'files-workspace-wrapper'\n\t\t\tVue.prototype.t = window.t\n\t\t\tVue.prototype.n = window.n\n\t\t\tVue.prototype.OCA = window.OCA\n\t\t\tconst View = Vue.extend(RichWorkspace)\n\t\t\tconst vm = new View({\n\t\t\t\tpropsData: {\n\t\t\t\t\tpath: fileList.getCurrentDirectory(),\n\t\t\t\t\thasRichWorkspace: true,\n\t\t\t\t},\n\t\t\t\tstore,\n\t\t\t}).$mount(this.el)\n\t\t\tsubscribe('files:navigation:changed', () => {\n\t\t\t\t// Expose if the default file list is active to the component\n\t\t\t\t// to only render the workspace if the file list is actually visible\n\t\t\t\tvm.active = OCA.Files.App.getCurrentFileList() === fileList\n\t\t\t})\n\t\t\tfileList.$el.on('urlChanged', data => {\n\t\t\t\tvm.path = data.dir.toString()\n\t\t\t})\n\t\t\tfileList.$el.on('changeDirectory', data => {\n\t\t\t\tvm.path = data.dir.toString()\n\t\t\t})\n\t\t})\n\t},\n}\n\nconst loadEditor = ({ sharingToken, mimetype, fileId, $el }) => {\n\tconst container = document.createElement('div')\n\tcontainer.id = 'texteditor'\n\n\tdocument.getElementById('app-content').appendChild(container)\n\n\tPromise.all([\n\t\timport(/* webpackChunkName: \"vendor\" */'vue'),\n\t\timport(/* webpackChunkName: \"editor\" */'./components/Editor.vue'),\n\t])\n\t\t.then(([vue, editor]) => ({\n\t\t\tVue: vue.default,\n\t\t\tEditor: editor.default,\n\t\t}))\n\t\t.then(({ Vue, Editor }) => {\n\t\t\tVue.prototype.t = window.t\n\t\t\tVue.prototype.OCA = window.OCA\n\n\t\t\tnew Vue({\n\t\t\t\trender: h => h(Editor, {\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tactive: true,\n\t\t\t\t\t\tshareToken: sharingToken,\n\t\t\t\t\t\tmime: mimetype,\n\t\t\t\t\t\tfileId,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tstore,\n\t\t\t})\n\t\t\t\t.$mount($el)\n\n\t\t})\n\t\t.catch((error) => logger.error('Failed to attach editor', { error }))\n}\n\ndocumentReady(() => {\n\tconst sharingToken = getSharingToken()\n\n\tif (!sharingToken) {\n\t\treturn\n\t}\n\n\tconst filesTable = document.querySelector('#preview table.files-filestable')\n\n\t// list of files - dir sharing\n\tif (filesTable) {\n\t\tOC.Plugins.register('OCA.Files.FileList', filesWorkspacePlugin)\n\t\tregisterFileActionFallback()\n\t\tregisterFileCreate()\n\t\treturn\n\t}\n\n\t// single file share\n\tconst mimetype = document.getElementById('mimetype')?.value\n\tif (mimetype && openMimetypes.indexOf(mimetype) !== -1) {\n\t\tconst $el = document.getElementById('preview')\n\t\tconst fileId = loadState('text', 'file_id')\n\t\tloadEditor({ mimetype, sharingToken, fileId, $el })\n\t}\n})\n\nOCA.Text = {\n\tRichWorkspaceEnabled: loadState('text', 'workspace_available'),\n}\n"],"file":"js/text-public.mjs"}